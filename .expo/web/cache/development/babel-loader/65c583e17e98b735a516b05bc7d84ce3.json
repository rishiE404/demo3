{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar GOOGLE_API_KEY = 'AIzaSyD2mP_sDlloOcwv6OLmYtATOJIcnDhcZcg';\nexport function getMapPreview(lat, lng) {\n  var imagePreviewUrl = \"https://maps.googleapis.com/maps/api/staticmap?center=\" + lat + \",\" + lng + \"&zoom=14&size=400x200&maptype=roadmap&markers=color:red%7Clabel:S%7C\" + lat + \",\" + lng + \"&key=\" + GOOGLE_API_KEY;\n  return imagePreviewUrl;\n}\nexport function getAddress(lat, lng) {\n  var url, response, data, address;\n  return _regeneratorRuntime.async(function getAddress$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = \"https://maps.googleapis.com/maps/api/geocode/json?latlng=\" + lat + \",\" + lng + \"&key=\" + GOOGLE_API_KEY;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 3:\n          response = _context.sent;\n\n          if (response.ok) {\n            _context.next = 6;\n            break;\n          }\n\n          throw new Error('Failed to fetch address!');\n\n        case 6:\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 8:\n          data = _context.sent;\n          address = data.results[0].formatted_address;\n          return _context.abrupt(\"return\", address);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/Users/rishishah/Developer/ReactNativeApps/demo3/util/location.js"],"names":["GOOGLE_API_KEY","getMapPreview","lat","lng","imagePreviewUrl","getAddress","url","fetch","response","ok","Error","json","data","address","results","formatted_address"],"mappings":";AAAA,IAAMA,cAAc,GAAG,yCAAvB;AAEA,OAAO,SAASC,aAAT,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AACtC,MAAMC,eAAe,8DAA4DF,GAA5D,SAAmEC,GAAnE,4EAA6ID,GAA7I,SAAoJC,GAApJ,aAA+JH,cAApL;AACA,SAAOI,eAAP;AACD;AAED,OAAO,SAAeC,UAAf,CAA0BH,GAA1B,EAA+BC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACCG,UAAAA,GADD,iEACmEJ,GADnE,SAC0EC,GAD1E,aACqFH,cADrF;AAAA;AAAA,2CAEkBO,KAAK,CAACD,GAAD,CAFvB;;AAAA;AAECE,UAAAA,QAFD;;AAAA,cAIAA,QAAQ,CAACC,EAJT;AAAA;AAAA;AAAA;;AAAA,gBAKG,IAAIC,KAAJ,CAAU,0BAAV,CALH;;AAAA;AAAA;AAAA,2CAQcF,QAAQ,CAACG,IAAT,EARd;;AAAA;AAQCC,UAAAA,IARD;AASCC,UAAAA,OATD,GASWD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBC,iBAT3B;AAAA,2CAUEF,OAVF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["const GOOGLE_API_KEY = 'AIzaSyD2mP_sDlloOcwv6OLmYtATOJIcnDhcZcg';\n\nexport function getMapPreview(lat, lng) {\n  const imagePreviewUrl = `https://maps.googleapis.com/maps/api/staticmap?center=${lat},${lng}&zoom=14&size=400x200&maptype=roadmap&markers=color:red%7Clabel:S%7C${lat},${lng}&key=${GOOGLE_API_KEY}`;\n  return imagePreviewUrl;\n}\n\nexport async function getAddress(lat, lng) {\n  const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${GOOGLE_API_KEY}`;\n  const response = await fetch(url);\n\n  if (!response.ok) {\n    throw new Error('Failed to fetch address!');\n  }\n\n  const data = await response.json();\n  const address = data.results[0].formatted_address;\n  return address;\n}"]},"metadata":{},"sourceType":"module"}